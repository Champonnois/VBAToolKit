VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "VtkWorkbookIsOpenTester"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False

'Option Explicit

Implements ITest
Implements ITestCase

Private mManager As TestCaseManager
Private mAssert As IAssert

Private Sub Class_Initialize()
    Set mManager = New TestCaseManager
End Sub

Private Property Get ITestCase_Manager() As TestCaseManager
    Set ITestCase_Manager = mManager
End Property

Private Property Get ITest_Manager() As ITestManager
    Set ITest_Manager = mManager
End Property

Private Sub ITestCase_SetUp(Assert As IAssert)
    Set mAssert = Assert
End Sub

Private Sub ITestCase_TearDown()
    'allow to iterate over all files in a directory
    Dir (vtkTestPath)
    'to not display messagebox how ask to save project
    Application.DisplayAlerts = False
    On Error Resume Next
    'Close Created WorkBook
    Workbooks(vtkTestProjectName & ".xlsm").Close
    'Delete Created WorkBook
    Kill vtkTestPath & "\" & vtkTestProjectName & "\Project\" & vtkTestProjectName & ".xlsm"
    RmDir vtkTestPath & "\" & vtkTestProjectName & "\Source\ConfProd"
    RmDir vtkTestPath & "\" & vtkTestProjectName & "\Source\ConfTest"
    RmDir vtkTestPath & "\" & vtkTestProjectName & "\Source\VbaUnit"
    RmDir vtkTestPath & "\" & vtkTestProjectName & "\Tests"
    RmDir vtkTestPath & "\" & vtkTestProjectName & "\Source"
    RmDir vtkTestPath & "\" & vtkTestProjectName & "\Project"
    RmDir vtkTestPath & "\" & vtkTestProjectName
    Application.DisplayAlerts = True
End Sub

Public Sub TestVBAToolKitWorkbookIsOpen()
'we will test the function on the current project , vbaToolkit
    mAssert.Equals a = VtkWorkbokIsOpen("VBAToolKit.xlsm"), True, "the source workbook must be open"
End Sub
Public Sub TestCreatedWorkBookIsOpen()
Dim returnvalue As Long
'in this function we will
'1/open  the test workbook ,2/make a test ,3/ close it ,4/ make another test

returnvalue = vtkCreateProject(path:=vtkTestPath, name:=vtkTestProjectName, displayError:=False)
On Error Resume Next
Application.Workbooks.Open (vtkTestPath & "\" & vtkTestProjectName & "\Project\" & vtkTestProjectName & ".xlsm")
mAssert.Equals a = VtkWorkbokIsOpen(vtkTestProjectName & ".xlsm"), True, vtkTestProjectName & "  must be open"

Workbooks(vtkTestProjectName & ".xlsm").Close
mAssert.Equals a = VtkWorkbokIsOpen(vtkTestProjectName & ".xlsm"), False, vtkTestProjectName & " must be Closed"

End Sub
Private Function ITest_Suite() As TestSuite
    Set ITest_Suite = New TestSuite
    ITest_Suite.AddTest ITest_Manager.ClassName, "TestVBAToolKitWorkbookIsOpen"
    ITest_Suite.AddTest ITest_Manager.ClassName, "TestCreatedWorkBookIsOpen"
End Function

Private Sub ITestCase_RunTest()
    Select Case mManager.methodName
        Case "TestVBAToolKitWorkbookIsOpen": TestVBAToolKitWorkbookIsOpen
        Case "TestCreatedWorkBookIsOpen": TestCreatedWorkBookIsOpen
        Case Else: mAssert.Should False, "Invalid test name: " & mManager.methodName
    End Select
End Sub


